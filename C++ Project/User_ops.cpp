#include "login_system.h"
#include <iostream>

void changePassword(User* u, vector<User>& users) {
    if (!requireOTP(u->username)) return;
    cout << "Enter new password: "; string np; cin >> np;
    u->passwordHash = hashPassword(np);
    u->isAutoGenerated = false;
    saveUsers(users);
    cout << "Password changed successfully.\n";
}

void viewProfile(User* u) {
    cout << "--- INFORMATION ---\n"
        << "Username  : " << u->username << "\n"
        << "Full name : " << u->fullName << "\n"
        << "ID Wallet : " << u->wallet.id << "\n"
        << "Balance   : " << u->wallet.balance << "\n";
}

void updateFullName(User* u, vector<User>& users) {
    if (!requireOTP(u->username)) return;
    cin.ignore();
    cout << "Enter new name: "; string nm; getline(cin, nm);
    u->fullName = nm;
    saveUsers(users);
    cout << "Update successful.\n";
}

void viewHistory(User* u) {
    cout << "--- HISTORY ---\n";
    for (auto& tx : u->wallet.history) {
        cout << nowToString(tx.timestamp)
            << " | " << tx.fromWallet
            << " -> " << tx.toWallet
            << " : " << tx.amount << "\n";
    }
}

void transferPoints(User* u, vector<User>& users) {
    cout << "Destination wallet: "; string dest; cin >> dest;
    User* v = nullptr;
    for (auto& x : users) if (x.wallet.id == dest) { v = &x; break; }
    if (!v) {
        cout << "Ví không tồn tại.\n";
        return;
    }
    cout << "Số điểm: "; int amt; cin >> amt;
    if (u->wallet.balance < amt) {
        cout << "Wallet does not exist.\n";
        return;
    }
    if (!requireOTP(u->username)) return;
    u->wallet.balance -= amt;
    v->wallet.balance += amt;
    Transaction tx{ u->wallet.id, dest, amt, time(nullptr) };
    u->wallet.history.push_back(tx);
    v->wallet.history.push_back(tx);
    saveUsers(users);
    cout << "Transfer successful.\n";
}
