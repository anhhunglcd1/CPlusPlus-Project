#ifndef LOGIN_SYSTEM_H
#define LOGIN_SYSTEM_H

#include <string>
#include <vector>
#include <ctime>
using namespace std;

struct Transaction {
    string fromWallet, toWallet;
    int amount;
    time_t timestamp;
};

struct Wallet {
    string id;
    int balance = 0;
    vector<Transaction> history;
};

struct User {
    string username;
    size_t passwordHash = 0;
    string fullName;
    bool isAdmin = false;
    bool isAutoGenerated = false;
    Wallet wallet;
};

// ==== Prototypes ====
string genRandomPassword(int length = 8);
string genOTP(int digits = 6);
size_t hashPassword(const string& pwd);
string nowToString(time_t t);

string inputHiddenPassword();

void backupData();
vector<User> loadUsers();
void saveUsers(const vector<User>& users);

User* findUser(vector<User>& users, const string& username);
bool registerUser(vector<User>& users, bool byAdmin = false);
bool registerAdmin(vector<User>& users);
bool deleteUser(vector<User>& users, const string& username);
User* login(vector<User>& users);
bool requireOTP(const string& username);

void changePassword(User* u, vector<User>& users);
void viewProfile(User* u);
void updateFullName(User* u, vector<User>& users);
void viewHistory(User* u);
void transferPoints(User* u, vector<User>& users);

void userMenu(User* u, vector<User>& users);
void adminMenu(User* u, vector<User>& users);

// Clear console screen (cross-platform)
void clearScreen();

#endif // LOGIN_SYSTEM_H
