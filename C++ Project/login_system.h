#pragma once
#ifndef LOGIN_SYSTEM_H
#define LOGIN_SYSTEM_H

#include <string>
#include <vector>
#include <ctime>
using namespace std;

// Số điểm còn lại trong reward pool (dùng để thưởng khi tạo tài khoản mới)
extern int rewardPool;
int loadRewardPool();                  // Đọc rewardPool từ file (nếu không có thì mặc định 30)
void saveRewardPool(int pool);         // Ghi rewardPool ra file

// Lưu thông tin một giao dịch chuyển điểm
struct Transaction {
    string fromWallet;    // ID ví gửi
    string toWallet;      // ID ví nhận
    int amount = 0;       // Số điểm giao dịch
    bool fromPool = false;// true nếu lấy từ pool gốc
    time_t timestamp = 0; // Thời điểm giao dịch
};

// Lưu thông tin ví của user
struct Wallet {
    string id;                   // Mã ví duy nhất
    int balance = 0;             // Số dư hiện tại
    int poolBalance = 0;         // Số điểm pool-origin còn lại
    vector<Transaction> history; // Lịch sử giao dịch
};

// Lưu thông tin người dùng
struct User {
    string username;                 // Tên đăng nhập
    size_t passwordHash = 0;         // Mã băm mật khẩu
    string fullName;                 // Họ tên đầy đủ
    bool isAdmin = false;            // Có phải admin không
    bool isAutoGenerated = false;    // Đánh dấu mật khẩu tự sinh
    Wallet wallet;                   // Thông tin ví
    string otp;                      // OTP cho các thay đổi cần xác nhận
    string pendingFullName;          // Tên mới đang chờ xác nhận OTP
    string pendingPasswordHash;      // Mật khẩu mới chờ xác nhận OTP (dạng string số)
};

// ==================== HÀM XỬ LÝ DỮ LIỆU ====================

string genRandomPassword(int length = 8);      // Sinh mật khẩu ngẫu nhiên
string genOTP(int digits = 6);                 // Sinh mã OTP ngẫu nhiên
size_t hashPassword(const string& pwd);        // Băm mật khẩu
string nowToString(time_t t);                  // Chuyển time_t thành chuỗi giờ
string inputHiddenPassword();                  // Nhập mật khẩu dạng ẩn *

void backupData();                             // Sao lưu dữ liệu users
vector<User> loadUsers();                      // Đọc danh sách user từ file
void saveUsers(const vector<User>& users);     // Ghi danh sách user ra file
void initPendingChangeFile();                  // Đảm bảo file pending_change.txt tồn tại

// ==================== HÀM QUẢN LÝ NGƯỜI DÙNG ====================

User* findUser(vector<User>& users, const string& username);        // Tìm user theo username
bool registerUser(vector<User>& users, bool byAdmin = false);       // Đăng ký user mới
bool deleteUser(vector<User>& users, const string& username);       // Xóa user khỏi hệ thống
bool requireOTP(const string& username);                            // Bắt xác nhận OTP khi thao tác quan trọng
User* login(vector<User>& users);                                   // Đăng nhập

void scheduleFullNameChange(User* u, vector<User>& users);          // Đặt lịch đổi tên, chờ xác nhận OTP
void schedulePasswordChange(User* u, vector<User>& users);          // Đặt lịch đổi mật khẩu, chờ xác nhận OTP
void changePassword(User* u, vector<User>& users);                  // Đổi mật khẩu trực tiếp (user tự đổi)
void viewProfile(User* u);                                          // Xem thông tin user
void updateFullName(User* u, vector<User>& users);                  // Đổi tên trực tiếp (user tự đổi)
void viewHistory(User* u);                                          // Xem lịch sử giao dịch ví
void transferPoints(User* u, vector<User>& users);                  // Chuyển điểm giữa các user
void userMenu(User* u, vector<User>& users);                        // Menu cho user thường
void adminMenu(User* u, vector<User>& users);                       // Menu cho admin
void clearScreen();                                                 // Xóa màn hình console

void logPendingChange(const string& username, const string& otp, const string& type); // Ghi log các thay đổi chờ OTP
void removePendingChange(const string& username, const string& otp);                  // Xóa log sau khi xác nhận OTP

#endif // LOGIN_SYSTEM_H
