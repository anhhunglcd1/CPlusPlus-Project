#include "login_system.h"
#include <iostream>

User* findUser(vector<User>& users, const string& username)
{
	for (auto& u : users)
		if (u.username == username)
			return &u;
	return nullptr;
}

bool registerUser(vector<User>& users, bool byAdmin)
{
	string username, fullName, pwd;
	cout << "\nEnter username: ";
	cin >> username;
	if (findUser(users, username))
	{
		cout << "Name already exists.\n";
		return false;
	}
	cin.ignore();
	cout << "Full name: ";
	getline(cin, fullName);
	cout << "Password (leave blank for system to generate): ";
	getline(cin, pwd);
	bool autoGen = false;
	if (pwd.empty())
	{
		pwd = genRamdomPassword();
		autoGen = true;
		cout << "Auto-generated password: " << pwd << "\n";
	}
	User u;
	u.username = username;
	u.passwordHash = hashPassword(pwd);
	u.fullName = fullName;
	u.isAdmin = byAdmin;
	u.isAutoGenerated = autoGen;
	u.wallet.id = "WAL" + to_string(time(nullptr)) + username;
	u.wallet.balance = 0;
	users.push_back(u);
	saveUsers(users);
	cout << "Registration successful.\n";
	return true;
}

User* login(vector<User>& users) {
	string username, pwd;
	cout << "Username: "; cin >> username;
	cout << "Password: "; cin >> pwd;
	User* u = findUser(users, username);
	if (!u || u->passwordHash != hashPassword(pwd)) {
		cout << "Login failed.\n";
		return nullptr;
	}
	if (u->isAutoGenerated) {
		cout << "Please change your password at first time!\n";
	}
	cout << "Hello " << u->fullName
		<< (u->isAdmin ? " (Admin)" : "") << "!\n";
	return u;
}

bool requireOTP(const string& username) {
	string otp = genOTP();
	cout << "[OTP sent to " << username << ": " << otp << "]\n";
	cout << "Enter OTP: "; string in; cin >> in;
	if (in != otp) {
		cout << "Invalid OTP.\n";
		return false;
	}
	return true;
}
